
@model List<FractionsQuestion>

@{
    ViewData["Title"] = "Fractions";
}

<h1>@ViewData["Title"]</h1>


<div class="row">
    <div class="col-11">
        <h1 style="font-size: 24px;">Arithmetic Questions</h1>
        @for (int i = 0; i < Model.Count; i++)
        {
            var questionId = i + 1;
            <div class="row question-row d-flex align-items-center">
                <div class="col-1">
                    <p class="display-5">@questionId:</p>
                </div>
                <div class="col-5">
                    <div class="fraction-row" style="display: flex; align-items: center;">
                        <div class="row">
                            <div class="col-4">
                                <div class="fraction">
                                    <p class="numerator question-number">@Model[i].Numerator1</p>
                                    <p class="denominator question-number">@Model[i].Denominator1</p>
                                </div>
                            </div>
                            <div class="col-4">
                                <p style="margin: 0;">@Model[i].Operator</p>
                            </div>
                            <div class="col-4">
                                <div class="fraction">
                                    <p class="numerator question-number">@Model[i].Numerator2</p>
                                    <p class="denominator question-number">@Model[i].Denominator2</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-1">
                    <p>=</p>
                </div>
                <div class="col-5">
                    <div class="fraction-row hidden">
                        <div class="fraction">
                            <p class="numerator question-number">@Model[i].AnswerNumerator</p>
                            <p class="denominator question-number">@Model[i].AnswerDenominator</p>
                        </div>
                    </div>
                </div>
            </div>
            <hr/>
        }

        <div style="display: flex; justify-content: start; gap: 10px;">
            <form method="post" asp-action="Fractions" asp-controller="Home">
                <input type="submit" value="Generate New Questions" class="btn btn-primary" onclick="return confirm('Are you sure you want to generate new questions?');" />
            </form>

            <button id="revealAllButton" class="btn btn-outline-primary">Reveal All Answers</button>
            <!-- Add this button in the HTML -->
            <button id="markAnswersButton" class="btn btn-outline-primary">Mark Answers</button>
                
        </div>
    </div>
    <div class="col-1">
        <div id="button-timer-container">
            <button id="startButton" class="btn btn-primary">Start</button>
            <div id="timer" class="h1"></div>
            <div id="marks"></div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        var time = 30 * 60; // 30 minutes in seconds
        var timerDisplay = document.getElementById('timer');
        var startButton = document.getElementById('startButton');
        var intervalId;

        function formatTime(seconds) {
            var minutes = Math.floor(seconds / 60);
            var remainingSeconds = seconds % 60;
            if (remainingSeconds < 10) {
                remainingSeconds = "0" + remainingSeconds;  // zero padding on seconds
            }
            return minutes + ":" + remainingSeconds;
        }

        document.getElementById('revealAllButton').addEventListener('click', function() {
            var password = prompt("Please enter the password to reveal all answers:");
            if (password === "REVEAL") {
                var fractions = document.getElementsByClassName('fraction-row');
                for (var i = 0; i < fractions.length; i++) {
                    fractions[i].classList.remove('hidden');
                }
            } else {
                alert("Incorrect password. The answers will not be revealed.");
            }
});

        function markAnswers() {
            var correctCount = 0;
            var incorrectCount = 0;
            for (var i = 0; i < @Model.Count; i++) {
                var answer = document.getElementById('answer-' + i).textContent.replace('Answer: ', '');
                var answerInput = document.getElementById('answer-input-' + i);
                if (answerInput.value === answer) {
                    answerInput.style.backgroundColor = "#62D809";
                    correctCount++;
                } else {
                    answerInput.style.backgroundColor = "#FE7676";
                    incorrectCount++;
                    // Display the correct answer next to the original one in brackets for incorrect answers
                    answerInput.value = answerInput.value + " (Correct: " + answer + ")";
                }
            }
            document.getElementById('marks').textContent = "Correct: " + correctCount + ", Incorrect: " + incorrectCount;
        }

        startButton.addEventListener('click', function() {
            if (startButton.textContent === 'Start') {
                startButton.textContent = 'Stop';
                intervalId = setInterval(function() {
                    if (startButton.textContent === 'Stop') {
                        timerDisplay.textContent = formatTime(time);
                        time--;
                    } else {
                        clearInterval(intervalId);
                    }

                    if (time < 0) {
                        clearInterval(intervalId);
                        // Disable the text inputs
                        var inputs = document.getElementsByClassName('answer-input');
                        for (var i = 0; i < inputs.length; i++) {
                            inputs[i].disabled = true;
                        }
                        // Show a popup saying 'Time's Up'
                        alert("Time's Up");
                        // Carry out the same actions as the markAnswersButton
                        markAnswers();
                    }
                }, 1000);
            } else {
                startButton.textContent = 'Start';
            }
});

        document.getElementById('markAnswersButton').addEventListener('click', function() {
            var confirmMark = confirm("Do you wish to mark the answers?");
            if (confirmMark) {
                markAnswers();
            }
});
    </script>
}