@model List<ArithmeticQuestion>


<div>
    <div class="row">
        <div class="col-10">
            <h1 style="font-size: 24px;">Arithmetic Questions</h1>
            @for (int i = 0; i < Model.Count; i++)
            {
            var questionId = i + 1;
            <p class="display-1">
                <span class="question-number">@questionId</span>
                @Model[i].Operand1.ToString("N0")
                @Model[i].Operator
                @Model[i].Operand2.ToString("N0")
                = <input type="text" id="answer-input-@i" class="answer-input" />
            </p>
            <p id="answer-@i" class="d-none h3">Answer: @Model[i].Answer.ToString("N0")</p>
            }

            <div style="display: flex; justify-content: start; gap: 10px;">
                <form method="post" asp-action="Multiple" asp-controller="Question">
                    <input type="submit" value="Generate New Questions" class="btn btn-primary"/>
                </form>

                <button id="revealAllButton" class="btn btn-outline-primary">Reveal All Answers</button>
            </div>
        </div>
        <div class="col-2">
            <div id="button-timer-container">
                <button id="startButton" class="btn btn-primary">Start</button>
                <div id="timer" class="h1"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var time = 30 * 60; // 30 minutes in seconds
        var timerDisplay = document.getElementById('timer');
        var startButton = document.getElementById('startButton');
        var intervalId;

        function formatTime(seconds) {
            var minutes = Math.floor(seconds / 60);
            var remainingSeconds = seconds % 60;
            if (remainingSeconds < 10) {
                remainingSeconds = "0" + remainingSeconds;  // zero padding on seconds
            }
            return minutes + ":" + remainingSeconds;
        }

        document.getElementById('revealAllButton').addEventListener('click', function() {
            var password = prompt("Please enter the password to reveal all answers:");
            if (password === "REVEAL") {
                for (var i = 0; i < @Model.Count; i++) {
                    var answer = document.getElementById('answer-' + i).textContent.replace('Answer: ', '');
                    var answerInput = document.getElementById('answer-input-' + i);
                    answerInput.value = answer;
                }
            } else {
                alert("Incorrect password. The answers will not be revealed.");
            }
});


        startButton.addEventListener('click', function() {
            if (startButton.textContent === 'Start') {
                startButton.textContent = 'Stop';
                intervalId = setInterval(function() {
                    if (startButton.textContent === 'Stop') {
                        timerDisplay.textContent = formatTime(time);
                        time--;
                    } else {
                        clearInterval(intervalId);
                    }

                    if (time < 0) {
                        clearInterval(intervalId);
                    }
                }, 1000);
            } else {
                startButton.textContent = 'Start';
            }
});
    </script>
}